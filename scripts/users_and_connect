#!/usr/bin/env bash

create_users() {
    while read line; do
        if [ ! -z "${line}" ]; then
            user_to_create=""
            # username;shell;root;pubkey
            IFS=";" user_to_create=( $line )

            [ -z "${user_to_create[1]}" ] && user_shell="/bin/bash" || user_shell="$(which "${user_to_create[1]}")"
            username="${user_to_create[0]}"
            user_is_root="${user_to_create[2]}"
            user_pubkey="${user_to_create[3]}"

            # -U: create a group with same name as username
            # -m: create home dir
            useradd -U -m -s "${user_shell}" "${username}"

            if [ "${user_is_root}" -eq "1" ]; then
                echo "${username} ALL:ALL" >> /etc/sudoers
            fi

            if [ ! -z "${user_pubkey}" ]; then
                mkdir "/home/${username}/.ssh"
                echo "${user_pubkey}" >> "/home/${username}/.ssh/authorized_keys"

                chown -R ${username} /home/${username}/.ssh
            fi
        fi
    done <(wget --no-check-certificate -O - "${URI_ROOT}resources/user_list")
}

ssh_config() {
    sed -i 's/#\? *\(PermitRootLogin\)\ yes/\1\ no/g' /etc/ssh/sshd_config
    sed -i 's/#\? *\(ChallengeResponseAuthentication\)\ yes/\1\ no/g' /etc/ssh/sshd_config
    sed -i 's/#\? *\(PasswordAuthentication\)\ yes/\1\ no/g' /etc/ssh/sshd_config

    service ssh restart
}

main() {
    create_users
    ssh_config
}

main
